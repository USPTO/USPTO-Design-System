@use "sass:math";
$easing: cubic-bezier(0.8, 0, 0.4, 0.8);
$speed: 1320ms; // animation time for each loop
$linecap-variant: () !default;
$linecap-variant: map-merge(
  (
    square-end: square,
    round-end: round,
  ),
  $linecap-variant
);
$stroke-width-variant: () !default;
$stroke-width-variant: map-merge(
  (
    extra-thick: 8,
    thick: 6,
    normal: 4,
    thin: 2,
  ),
  $stroke-width-variant
);

html,
body {
  height: 100%;
}

.overlay {
  background-color: rgba($color: #000000, $alpha: 0.3);
  display: flex;
  align-items: center;
  justify-content: center;
  &.full-page {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

.md-preloader {
  $loops: 5; // number of points where the arc meets
  $arc: 0.72; // fraction of the circumference that the arc grows to
  $perimeter: 67px * math.$pi; // circumference of the raw svg inner cricle

  // measure to prevent inline block spacing from affecting the outer rotation
  font-size: 0;

  display: inline-block;
  animation: outer $speed * $loops linear infinite;

  svg {
    animation: inner $speed linear infinite;

    circle {
      fill: none;
      stroke: $info; //default value
      stroke-linecap: "square"; //default value
      stroke-width: 6; //default value
      animation: arc $speed $easing infinite;

      @each $color, $value in $theme-colors {
        &.circle-#{$color} {
          stroke: $value;
        }
      }
      @each $linecap, $value in $linecap-variant {
        &.circle-#{$linecap} {
          stroke-linecap: $value;
        }
      }
      @each $stroke-width, $value in $stroke-width-variant {
        &.circle-#{$stroke-width} {
          stroke-width: $value;
        }
      }
    }
  }

  @keyframes outer {
    0% {
      transform: rotate(0);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes inner {
    0% {
      transform: rotate(-360deg * (1 - $arc));
    }
    100% {
      transform: rotate(0);
    }
  }

  @keyframes arc {
    0% {
      stroke-dasharray: 1 $perimeter;
      stroke-dashoffset: 0;
    }
    40% {
      stroke-dasharray: $arc * $perimeter, $perimeter;
      stroke-dashoffset: 0;
    }
    100% {
      stroke-dasharray: 1 $perimeter;
      stroke-dashoffset: -$arc * $perimeter;
    }
  }
}

// Here is where the magic happens

$offset: 187;
$duration: 1.4s;

.spinner {
  animation: rotator $duration linear infinite;
}

@keyframes rotator {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(270deg);
  }
}

.path {
  stroke-dasharray: $offset;
  stroke-dashoffset: 0;
  transform-origin: center;
  animation: dash $duration ease-in-out infinite, colors ($duration * 4) ease-in-out infinite;
}

@keyframes colors {
  0% {
    stroke: #4285f4;
  }
  25% {
    stroke: #de3e35;
  }
  50% {
    stroke: #f7c223;
  }
  75% {
    stroke: #1b9a59;
  }
  100% {
    stroke: #4285f4;
  }
}

@keyframes dash {
  0% {
    stroke-dashoffset: $offset;
  }
  50% {
    stroke-dashoffset: $offset/4;
    transform: rotate(135deg);
  }
  100% {
    stroke-dashoffset: $offset;
    transform: rotate(450deg);
  }
}
